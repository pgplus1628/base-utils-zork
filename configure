#!/bin/bash


## ===================================================
# Helper Functions

function do_print_help {
  echo "Usage: ./configure [--prefix=PREFIX] "
  echo
  echo "  --cleanup           remove all build directories"
  echo
  echo "  --prefix=[PREFIX]   base-utils installation target directory. Defaults to /usr/local"
  echo
  echo "  --no_tcmalloc       Disable using tcmalloc instead of malloc."
  echo
  echo "  --build_testing     Build with testing(will set CMake BUILD_TESTING ON)."
  echo 
  echo "  -D var=value        Specify definitions to be passed on to cmake."
  exit 1
} # end do_print_help

function do_distclean {
  echo "rm -rf build/"
  rm -rf build/
  exit 1
} # end do_distclean

function do_unknown_option {
  echo "Unknow optino: $1"
  echo "run ./configure --help to get help"
  exit 1
} # end do_unknown_option



## ==================================================
# Configurations
PROJECT_HOME=$PWD
RELEASE_DIR=build/release
DEBUG_DIR=build/debug
INSTALL_DIR=/usr/local
NO_TCMALLOC=true
BUILD_TESTING=OFF
CFLAGS=""
CXX="g++"

# Parse command line options
while [ $# -gt 0 ]
  do case $1 in
    --help)         print_help=1 ;;
    --distclean)    distclean=1 ;;
    --no_tcmalloc)  no_tcmalloc=1 ;;
    --build_testing) build_testing=1 ;;
    --prefix=*)     prefix=${1##--prefix=} ;;
    -D)             CFLAGS="$CFLAGS -D $2"; shift ;;
    *)              do_unknown_option $1 ;;
  esac
  shift
done

if [ $print_help ] ; then
  do_print_help;
fi

if [ $distclean ] ; then
  do_distclean;
fi

if [ $no_tcmalloc ] ; then
  NO_TCMALLOC=true
fi

if [ $build_testing ] ; then
  BUILD_TESTING=ON
fi

if [[ -n $prefix ]]; then
  INSTALL_DIR=$prefix
fi


# Add additional flags
CFLAGS="$CFLAGS -D BUILD_TESTING=$BUILD_TESTING"  
CFLAGS="$CFLAGS -D NO_TCMALLOC:BOOL=$NO_TCMALLOC"



## ================================================
# Setup cmake

if [ -z `which cmake` ] ; then
  echo "CMake is not installed, please install the newest version of cmake."
  echo "Cmake 2.8 or larger is required."
  exit 1
fi

CMAKE="cmake"

## ===============================================
# Run cmake
set -e
set -o pipefail


echo -e "\n\n\n ===================== Release ==================="
if [ ! -d $RELEASE_DIR ]; then
  mkdir -p $RELEASE_DIR
fi

cd $RELEASE_DIR
rm -f CMakeCache.txt
bld_cmd="$CMAKE -D CMAKE_BUILD_TYPE=Release $CFLAGS ../../."
echo $bld_cmd
eval $bld_cmd
cd $PROJECT_HOME

echo -e "\n\n\n ==================== Debug ===================="
if [ ! -d $DEBUG_DIR ]; then
  mkdir $DEBUG_DIR
fi
cd $DEBUG_DIR
rm -f CMakeCache.txt
bld_cmd="$CMAKE -D CMAKE_BUILD_TYPE=Debug $CFLAGS ../../."
echo $bld_cmd
eval $bld_cmd
cd $PROJECT_HOME


echo "**************************************************"
echo "*  cd build/release or build/debug               *"
echo "*  make -j2                                      *"
echo "*  to build the project                          *"
echo "**************************************************"


























